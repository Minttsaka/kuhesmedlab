/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/Soc6B8scqDG
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/


import Link from "next/link"
import { Sheet, SheetTrigger, SheetContent, SheetClose } from "@/components/ui/sheet"
import { Button } from "@/components/ui/button"
import { signOut } from "next-auth/react"
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuGroup,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuPortal,
  DropdownMenuSeparator,
  DropdownMenuShortcut,
  DropdownMenuSub,
  DropdownMenuSubContent,
  DropdownMenuSubTrigger,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu"
import { Cloud, CreditCard, Github, Keyboard, LifeBuoy, LogOut, Mail, MenuSquareIcon, MessageSquare, Plus, PlusCircle, Search, Settings, User, UserPlus, Users, VolumeIcon } from "lucide-react"
import { BellIcon, Component1Icon, QuestionMarkCircledIcon } from "@radix-ui/react-icons"
import { Input } from "./ui/input"
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from "@/components/ui/popover"
import Notifications from "./Notifications"
import { getServerSession } from "next-auth"
import { authOptions } from "@/lib/auth"
import { prisma } from "@/lib/prisma"
import Logout from "./Logout"

type User = {
  id: string;
  email: string;
  name: string;
  role:string,
  country: string | null;
  bio: string | null;
  password: string;
  emailVerified: Date | null;
  phone: string | null;
  image: string | null;
  researchId: string | null;
}


export async function DashboardNav() {


  const session:any = await getServerSession(authOptions);
  const sessionuser= session.user as User;

  const firstResearch = await prisma.research.findFirst({
    where:{
      creatorId:sessionuser.id
    }
    ,
    orderBy:{
      createdAt:"desc"
    }
  })

  const user = await prisma.user.findUnique({
    where:{
      id:sessionuser.id
    }
  })

  return (
    <header>
     <div className="bg-gradient-to-r from-purple-300 to-blue-400">
        <div className="container mx-auto">
          <p className="font-bold p-2 text-xs text-white">Lorem ipsum dolor sit amet consectetur adipisicing elit. Dignissimos, maxime.</p>
        </div>
     </div>
     <div className="flex justify-between gap-2 items-center bg-blue-100 p-2">
      <div>
        <Avatar>
          <AvatarImage src='/img/official-logo.png' className="object-cover" />
      </Avatar>
      </div>
      <div className="w-full flex items-center bg-white shadow-xl gap-3 px-5 rounded-xl">
        <Input className="w-full bg-transparent border-none" />
        <Search  className="text-gray-500 "/>
      </div>
     
      <div className="flex gap-2 items-center">
      <div className="w-fit p-1 rounded-full hover:bg-gray-100 bg-white">
      <Popover>
      <PopoverTrigger asChild>
        <Component1Icon className="h-6 w-6 text-gray-500"  />
      </PopoverTrigger>
      <PopoverContent className="w-80">
        <div className="space-y-3 font-bold">
          <div className="grid grid-cols-2 gap-2">
            <Link className="flex items-center justify-center p-5 bg-blue-100 text-blue-500 rounded-md" href={firstResearch ? `/mw/publication/${firstResearch.id}`:"/mw/research"}>
              Research
            </Link>

            <Link className=" flex items-center justify-center p-5 bg-purple-100 text-purple-500 rounded-md" href={'/mw/survey'} >
              Surveys
            </Link>

            <Link className="flex items-center justify-center p-5 bg-yellow-100 text-yellow-500 rounded-md" href={'/publications'} target="__blank">
              Library
            </Link>

            <Link className="flex items-center justify-center p-5 bg-green-100 text-green-500 rounded-md" href={'/community'}>
              Community
            </Link>
          </div>
          <h2>Other Services</h2>
          <div className="grid gap-2 bg-gray-100 p-2 rounded-lg">
              <div className="space-y-2  w-full flex items-center gap-1">
                <div className="bg-purple-100 w-fit rounded p-2 ">
                  <VolumeIcon className="h-5 w-5 text-purple-600" />
                  </div>
                  <div>
                    <p className="text-xs text-gray-500">Voice Matters</p>
                  </div>
                </div>

                <div className="space-y-2 w-full flex items-center gap-1">
                <div className="bg-purple-100 w-fit rounded p-2 ">
                  <QuestionMarkCircledIcon className="h-5 w-5 text-purple-600" />
                  </div>
                  <div>
                    <p className="text-xs text-gray-500">Support</p>
                  </div>
                </div>

                <div className="space-y-2  w-full flex items-center gap-1">
                <div className="bg-purple-100 w-fit rounded p-2 ">
                  <QuestionMarkCircledIcon className="h-5 w-5 text-purple-600" />
                  </div>
                  <div>
                    <p className="text-xs text-gray-500 text-wrap">Voice Matters</p>
                  </div>
                </div>
          </div>
          
        </div>
      </PopoverContent>
    </Popover>
        </div>
      <Notifications />
            
          <DropdownMenu>
            <DropdownMenuTrigger asChild>
                <Avatar>
                  <AvatarImage src={user?.image!} className="object-cover"/>
                  <AvatarFallback>{user?.name}</AvatarFallback>
                </Avatar>
            </DropdownMenuTrigger>
            <DropdownMenuContent className="w-56 mr-5">
              <DropdownMenuLabel>My Account</DropdownMenuLabel>
              <DropdownMenuSeparator />
              <DropdownMenuGroup>
             {user?.role==="ADMIN" && 
             <DropdownMenuItem>
                  <Link  className="flex items-center gap-2" target="__blank"  href={'https://adminkuhesmedlab-minttsaka-gmailcoms-projects.vercel.app/a/dashboard'} >
                    <User className="mr-2 h-4 w-4" />
                  
                  <span>Admin panel</span>
                  </Link>
                </DropdownMenuItem>}
                <DropdownMenuItem>
                  <Link className="flex items-center gap-2" href={'/mw/profile'}>
                    <User className="mr-2 h-4 w-4" />
                 
                  <span>Profile</span>
                  </Link>
                </DropdownMenuItem>
                
                <DropdownMenuItem>
                  <Link className="flex items-center gap-2" href={'/404'}>
                  <Settings className="mr-2 h-4 w-4" />
                  <span>Settings</span>

                  </Link>

                </DropdownMenuItem>
               
              </DropdownMenuGroup>
              <DropdownMenuSeparator />
              <DropdownMenuItem>
                
                <Link className="flex items-center gap-2" href={'/404'}>
                  <Cloud className="mr-2 h-4 w-4" />
                  <span>API</span>
                  </Link>
              </DropdownMenuItem>
              <DropdownMenuSeparator />
              <DropdownMenuItem>
                <Logout />
              </DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>
      </div>
            
          </div>

    </header>
  )
}

function MenuIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="4" x2="20" y1="12" y2="12" />
      <line x1="4" x2="20" y1="6" y2="6" />
      <line x1="4" x2="20" y1="18" y2="18" />
    </svg>
  )
}


function MountainIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m8 3 4 8 5-5 5 15H2L8 3z" />
    </svg>
  )
}


function XIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>
  )
}
