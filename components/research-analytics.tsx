/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/yXGc4IsjOWE
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { Button } from "@/components/ui/button"
import { Card, CardHeader, CardDescription, CardTitle, CardContent } from "@/components/ui/card"
import { CartesianGrid, XAxis, Area, AreaChart, Pie, PieChart, Line, LineChart } from "recharts"
import { ChartTooltipContent, ChartTooltip, ChartContainer } from "@/components/ui/chart"
import { CloudOffIcon, } from "lucide-react"

export function ResearchAnalytics({file_url, researchId}:{file_url:string, researchId:string}) {

  return (
    <div className="min-h-screen" id='analytics'>
        <main className="flex flex-col gap-4 p-4 lg:gap-8 lg:p-6">
            <div className="grid lg:grid-cols-3 gap-6">
              <Card>
                <CardHeader className="flex flex-row justify-between items-center">
                  <div>
                    <CardDescription>Total Views</CardDescription>
                    <CardTitle>200</CardTitle>
                  </div>
                  
                  <div>
                    <CardDescription>Total Comments</CardDescription>
                    <CardTitle>100</CardTitle>
                  </div>
                </CardHeader>
                <CardContent className="w-[70vw] lg:w-full overflow-x-auto">
                  <AreachartgradientChart className="" />
                </CardContent>
              </Card>
              <Card>
                <CardHeader>
                  <CardDescription>Total Expenses</CardDescription>
                  <CardTitle>$3,780.00</CardTitle>
                </CardHeader>
                <CardContent className="w-[70vw] lg:w-full overflow-x-auto">
                  <AreachartstackedChart className="aspect-[4/3]" />
                </CardContent>
              </Card>
              <Card>
                <CardHeader>
                  <CardDescription>Contributions</CardDescription>
                  <CardTitle></CardTitle>
                </CardHeader>
                <CardContent className="w-[70vw] lg:w-full overflow-x-auto">
                  <PiechartlabelChart className="aspect-[4/3]" />
                </CardContent>
              </Card>
            </div>
            <div className="grid gap-6">
              <div className="grid lg:grid-cols-2 gap-6">
                <Card>
                  <CardHeader>
                    <CardTitle>Your Document</CardTitle>
                    <CardDescription>This is the uploded document of your research</CardDescription>
                  </CardHeader>
                  <CardContent>
                  {file_url && (
                      <iframe
                      src={`https://docs.google.com/gview?url=${file_url}&embedded=true`}
                      className="w-full h-full"
                    ></iframe>
                    )} 
                  </CardContent>
                </Card>
                <Card>
                  <CardHeader>
                    <CardTitle>Cloud Docs</CardTitle>
                    <CardDescription>View your document in google docs</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-2">
                    {/* <div className="rounded-lg p-4 bg-gray-100 hover:shadow-lg transition-shadow">
                      <h3 className="text-lg  truncate">Quarterly Financial Report Q4 2023</h3>
                      <div className="flex items-center justify-between">
                        <p className="text-sm text-muted-foreground line-clamp-2">
                          Comprehensive financial report for Q4 2023, including revenue, expenses, and key metrics.
                        </p>
                        <time dateTime="2023-12-31" className="text-sm text-muted-foreground">
                          Dec 31, 2023
                        </time>
                      </div>
                      <div className="mt-4">
                        <Link
                          href="#"
                          target="_blank"
                          className="inline-flex items-center gap-2 px-4 py-2 rounded-md bg-secondary text-secondary-foreground  hover:bg-secondary/90 focus:outline-none focus:ring-1 focus:ring-secondary/50"
                          prefetch={false}
                        >
                          
                          Open in Google Docs
                        </Link>
                      </div>
                    </div>
        <div className="rounded-lg p-4 bg-gray-100 hover:shadow-lg transition-shadow">
          <h3 className="text-lg  truncate">Quarterly Financial Report Q4 2023</h3>
          <div className="flex items-center justify-between">
            <p className="text-sm text-muted-foreground line-clamp-2">
              Comprehensive financial report for Q4 2023, including revenue, expenses, and key metrics.
            </p>
            <time dateTime="2023-12-31" className="text-sm text-muted-foreground">
              Dec 31, 2023
            </time>
          </div>
          <div className="mt-4">
            <Link
              href="#"
              target="_blank"
              className="inline-flex items-center gap-2 px-4 py-2 rounded-md bg-secondary text-secondary-foreground  hover:bg-secondary/90 focus:outline-none focus:ring-1 focus:ring-secondary/50"
              prefetch={false}
            >
              
              Open in Google Docs
            </Link>
          </div>
        </div> */} <Card className="w-full bg-primary text-primary-foreground p-8 flex flex-col items-center justify-center text-center">
                      <div className="bg-primary-foreground/10 rounded-full p-4 mb-4">
                        <CloudOffIcon className="w-8 h-8" />
                      </div>
                      <h2 className="text-2xl font-bold mb-2">No Cloud Documents Found</h2>
                      <p className="text-muted-foreground">
                        It looks like you havent created any documents to the cloud yet. Get started by clicking the create button
                        below.
                      </p>
                      <Button variant="secondary" className="mt-6">
                        Create
                      </Button>
                    </Card>
                  </CardContent>
                </Card>
              </div>
             
            </div>
        </main>
    </div>
  )
}

const LoadingSpinner: React.FC = () => {
  return (
    <svg
      className="animate-spin h-10 w-10 text-gray-500"
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
    >
      <circle
        className="opacity-25"
        cx="12"
        cy="12"
        r="10"
        stroke="currentColor"
        strokeWidth="4"
      ></circle>
      <path
        className="opacity-75"
        fill="currentColor"
        d="M4 12a8 8 0 018-8v8H4z"
      ></path>
    </svg>
  );
};

function AreachartgradientChart(props:any) {
  return (
    <div {...props}>
      <ChartContainer
        config={{
          comments: {
            label: "comments",
            color: "hsl(var(--chart-1))",
          },
          views: {
            label: "views",
            color: "hsl(var(--chart-2))",
          },
        }}
        className="min-h-[300px]"
      >
        <AreaChart
          accessibilityLayer
          data={[
            { month: "January", comments: 186, views: 80 },
            { month: "February", comments: 305, views: 200 },
            { month: "March", comments: 237, views: 120 },
            { month: "April", comments: 73, views: 190 },
            { month: "May", comments: 209, views: 130 },
            { month: "June", comments: 214, views: 140 },
          ]}
          margin={{
            left: 12,
            right: 12,
          }}
        >
          <CartesianGrid vertical={false} />
          <XAxis
            dataKey="month"
            tickLine={false}
            axisLine={false}
            tickMargin={8}
            tickFormatter={(value) => value.slice(0, 3)}
          />
          <ChartTooltip cursor={false} content={<ChartTooltipContent />} />
          <defs>
            <linearGradient id="fillcomments" x1="0" y1="0" x2="0" y2="1">
              <stop offset="5%" stopColor="var(--color-comments)" stopOpacity={0.8} />
              <stop offset="95%" stopColor="var(--color-comments)" stopOpacity={0.1} />
            </linearGradient>
            <linearGradient id="fillviews" x1="0" y1="0" x2="0" y2="1">
              <stop offset="5%" stopColor="var(--color-views)" stopOpacity={0.8} />
              <stop offset="95%" stopColor="var(--color-views)" stopOpacity={0.1} />
            </linearGradient>
          </defs>
          <Area
            dataKey="views"
            type="natural"
            fill="url(#fillviews)"
            fillOpacity={0.4}
            stroke="var(--color-views)"
            stackId="a"
          />
          <Area
            dataKey="comments"
            type="natural"
            fill="url(#fillcomments)"
            fillOpacity={0.4}
            stroke="var(--color-comments)"
            stackId="a"
          />
        </AreaChart>
      </ChartContainer>
    </div>
  )
}


function AreachartstackedChart(props:any) {
  return (
    <div {...props}>
      <ChartContainer
        config={{
          citations: {
            label: "citations",
            color: "hsl(var(--chart-1))",
          },
          mobile: {
            label: "Mobile",
            color: "hsl(var(--chart-2))",
          },
        }}
        className="min-h-[300px]"
      >
        <AreaChart
          accessibilityLayer
          data={[
            { month: "January", citations: 186, mobile: 80 },
            { month: "February", citations: 305, mobile: 200 },
            { month: "March", citations: 237, mobile: 120 },
            { month: "April", citations: 73, mobile: 190 },
            { month: "May", citations: 209, mobile: 130 },
            { month: "June", citations: 214, mobile: 140 },
          ]}
          margin={{
            left: 12,
            right: 12,
          }}
        >
          <CartesianGrid vertical={false} />
          <XAxis
            dataKey="month"
            tickLine={false}
            axisLine={false}
            tickMargin={8}
            tickFormatter={(value) => value.slice(0, 3)}
          />
          <ChartTooltip cursor={false} content={<ChartTooltipContent indicator="dot" />} />
          <Area
            dataKey="mobile"
            type="natural"
            fill="var(--color-mobile)"
            fillOpacity={0.4}
            stroke="var(--color-mobile)"
            stackId="a"
          />
          <Area
            dataKey="citations"
            type="natural"
            fill="var(--color-citations)"
            fillOpacity={0.4}
            stroke="var(--color-citations)"
            stackId="a"
          />
        </AreaChart>
      </ChartContainer>
    </div>
  )
}


function ArrowLeftIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m12 19-7-7 7-7" />
      <path d="M19 12H5" />
    </svg>
  )
}


function BarChartIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="12" x2="12" y1="20" y2="10" />
      <line x1="18" x2="18" y1="20" y2="4" />
      <line x1="6" x2="6" y1="20" y2="16" />
    </svg>
  )
}


function BellIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9" />
      <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0" />
    </svg>
  )
}


function CalendarClockIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M21 7.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h3.5" />
      <path d="M16 2v4" />
      <path d="M8 2v4" />
      <path d="M3 10h5" />
      <path d="M17.5 17.5 16 16.3V14" />
      <circle cx="16" cy="16" r="6" />
    </svg>
  )
}


function HomeIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" />
      <polyline points="9 22 9 12 15 12 15 22" />
    </svg>
  )
}


function LinechartChart(props:any) {
  return (
    <div {...props}>
      <ChartContainer
        config={{
          desktop: {
            label: "Desktop",
            color: "hsl(var(--chart-1))",
          },
        }}
      >
        <LineChart
          accessibilityLayer
          data={[
            { month: "January", desktop: 186 },
            { month: "February", desktop: 305 },
            { month: "March", desktop: 237 },
            { month: "April", desktop: 73 },
            { month: "May", desktop: 209 },
            { month: "June", desktop: 214 },
          ]}
          margin={{
            left: 12,
            right: 12,
          }}
        >
          <CartesianGrid vertical={false} />
          <XAxis
            dataKey="month"
            tickLine={false}
            axisLine={false}
            tickMargin={8}
            tickFormatter={(value) => value.slice(0, 3)}
          />
          <ChartTooltip cursor={false} content={<ChartTooltipContent hideLabel />} />
          <Line dataKey="desktop" type="natural" stroke="var(--color-desktop)" strokeWidth={2} dot={false} />
        </LineChart>
      </ChartContainer>
    </div>
  )
}


function Package2Icon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M3 9h18v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9Z" />
      <path d="m3 9 2.45-4.9A2 2 0 0 1 7.24 3h9.52a2 2 0 0 1 1.8 1.1L21 9" />
      <path d="M12 3v6" />
    </svg>
  )
}


function PiechartlabelChart(props:any) {
  return (
    <div {...props}>
      <ChartContainer
        config={{
          visitors: {
            label: "Visitors",
          },
          chrome: {
            label: "Chrome",
            color: "hsl(var(--chart-1))",
          },
          safari: {
            label: "Safari",
            color: "hsl(var(--chart-2))",
          },
          firefox: {
            label: "Firefox",
            color: "hsl(var(--chart-3))",
          },
          edge: {
            label: "Edge",
            color: "hsl(var(--chart-4))",
          },
          other: {
            label: "Other",
            color: "hsl(var(--chart-5))",
          },
        }}
        className="mx-auto aspect-square max-h-[250px] pb-0"
      >
        <PieChart>
          <ChartTooltip content={<ChartTooltipContent hideLabel />} />
          <Pie
            data={[
              { browser: "Survey A", visitors: 10 , fill: "var(--color-chrome)"},
              { browser: "Survey B", visitors: 25 , fill: "var(--color-safari)"},
              { browser: "Survey C", visitors: 15 , fill: "var(--color-firefox)" },
              { browser: "Survey D", visitors: 5  , fill: "var(--color-edge)"},
              { browser: "Survey E", visitors: 20 , fill: "var(--color-other)" }
            ]}
            dataKey="visitors"
            label
            nameKey="browser"
          />
        </PieChart>
      </ChartContainer>
    </div>
  )
}


function SearchIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="11" cy="11" r="8" />
      <path d="m21 21-4.3-4.3" />
    </svg>
  )
}


function SettingsIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z" />
      <circle cx="12" cy="12" r="3" />
    </svg>
  )
}


function TicketIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z" />
      <path d="M13 5v2" />
      <path d="M13 17v2" />
      <path d="M13 11v2" />
    </svg>
  )
}


function WalletIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M19 7V4a1 1 0 0 0-1-1H5a2 2 0 0 0 0 4h15a1 1 0 0 1 1 1v4h-3a2 2 0 0 0 0 4h3a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1" />
      <path d="M3 5v14a2 2 0 0 0 2 2h15a1 1 0 0 0 1-1v-4" />
    </svg>
  )
}
